[GLOBAL]
pants_version = "2.10.0"
pythonpath = ["pants-plugins"] # Let Pants know that we want to reference modules from within here
print_stacktrace = true # You'll want this enabled - trust me

backend_packages = [
    "pants.backend.plugin_development", # Adds the `pants_requirements` target type
    "pants.backend.python",
    "pants.backend.python.lint.bandit",
    "pants.backend.python.lint.black",
    #"pants.backend.python.lint.docformatter", # Disabled because I won't add docs to this example
    "pants.backend.python.lint.flake8",
    "pants.backend.python.lint.isort",
    "pants.backend.python.lint.pylint",
    "pants.backend.python.typecheck.mypy",
    "pants.backend.experimental.python.lint.autoflake",
    "pants.backend.experimental.python.lint.pyupgrade",
    "pants.backend.shell",
    "pants.backend.shell.lint.shellcheck",
    "pants.backend.shell.lint.shfmt",
    "experimental.fooify",
]

[source]
root_patterns = [
    "helloworld",
    "pants-plugins",
]

[python]
interpreter_constraints = [">=3.9,<3.11"]

[bandit]
# Skipping assertion warnings - because this is an example project
args = ["--skip B101"]

[flake8]
args = ["--max-line-length 88", "--ignore=E501"]

[isort]
args = "--profile black"

[pylint]
# Skipping documentation warnings, and f-string log warnings
args = "--disable=missing-module-docstring,missing-class-docstring,missing-function-docstring,logging-fstring-interpolation"

[pyupgrade]
args = "--py39-plus"

[mypy]
version = "mypy==0.942"
lockfile = "build-support/mypy.txt"

[shfmt]
# See https://github.com/mvdan/sh/blob/master/cmd/shfmt/shfmt.1.scd#printer-flags.
args = ["-i 4", "-ci", "-sr"]

[anonymous-telemetry]
enabled = false
